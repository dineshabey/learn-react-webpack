{"version":3,"file":"main.js","mappings":";;;;;;;;;;;;;;;AAAO,IAAIA,YAAY,GAAGC,QAAQ,CAACC,aAAa,CAAC,WAAW,CAAC;AACtD,IAAIC,YAAY,GAAGF,QAAQ,CAACC,aAAa,CAAC,SAAS,CAAC;;;;;;UCD3D;UACA;;UAEA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;;UAEA;UACA;;UAEA;UACA;UACA;;;;;WCtBA;WACA;WACA;WACA;WACA,yCAAyC,wCAAwC;WACjF;WACA;WACA;;;;;WCPA;;;;;WCAA;WACA;WACA;WACA,uDAAuD,iBAAiB;WACxE;WACA,gDAAgD,aAAa;WAC7D;;;;;;;;;;;;ACNyD;AAGzDF,oDAAY,CAACI,OAAO,GAAGC,gBAAgB;AACvC,IAAIC,UAAU,GAAG,KAAK;AAGtBC,iBAAiB,CAAC,CAAC;AACnB,SAASF,gBAAgBA,CAAA,EAAG;EACxBC,UAAU,GAAG,CAACA,UAAU;EACxB;EACAC,iBAAiB,CAAC,CAAC;AACvB;;AAGA;AACA,SAASA,iBAAiBA,CAAA,EAAG;EACzBC,gBAAgB,CAAC,CAAC;EAClB,IAAIF,UAAU,EAAE;IACZH,oDAAY,CAACM,KAAK,CAACC,OAAO,GAAG,OAAO;EACxC,CAAC,MAAM;IACHP,oDAAY,CAACM,KAAK,CAACC,OAAO,GAAG,OAAO;EAExC;AACJ;;AAEA;AACA,SAASF,gBAAgBA,CAAA,EAAG;EACxB,IAAIF,UAAU,EAAE;IACZN,oDAAY,CAACW,WAAW,GAAG,kBAAkB;EACjD,CAAC,MAAM;IACHX,oDAAY,CAACW,WAAW,GAAG,kBAAkB;EAEjD;AAEJ;AAEA,IAAIC,GAAG,gBAAGC,KAAA,CAAAC,aAAA,YAAG,mBAAoB,CAAC;AAElC,IAAMC,MAAM,GAAGd,QAAQ,CAACC,aAAa,CAAC,MAAM,CAAC;AAC7C,IAAMc,IAAI,GAAGC,QAAQ,CAACC,UAAU,CAACH,MAAM,CAAC;AACxCC,IAAI,CAACG,MAAM,CAACP,GAAG,CAAC;AAEhBQ,OAAO,CAACC,GAAG,CAAC,UAAU,CAAC,C","sources":["webpack://webpack/./src/dom-loder.js","webpack://webpack/webpack/bootstrap","webpack://webpack/webpack/runtime/define property getters","webpack://webpack/webpack/runtime/hasOwnProperty shorthand","webpack://webpack/webpack/runtime/make namespace object","webpack://webpack/./src/index.js"],"sourcesContent":["export let toggleButton = document.querySelector('#myButton');\r\nexport let descriptionP = document.querySelector('#myPara');\r\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","import { toggleButton, descriptionP } from './dom-loder';\r\n\r\n\r\ntoggleButton.onclick = changeVisibility;\r\nlet isVisibale = false;\r\n\r\n\r\ntoggleDescription();\r\nfunction changeVisibility() {\r\n    isVisibale = !isVisibale;\r\n    // console.log(isVisibale)\r\n    toggleDescription();\r\n}\r\n\r\n\r\n//chnage tongle para description ===============\r\nfunction toggleDescription() {\r\n    changeButtontext();\r\n    if (isVisibale) {\r\n        descriptionP.style.display = 'block';\r\n    } else {\r\n        descriptionP.style.display = 'none ';\r\n\r\n    }\r\n}\r\n\r\n//chnage button name ===============\r\nfunction changeButtontext() {\r\n    if (isVisibale) {\r\n        toggleButton.textContent = 'Hide Description';\r\n    } else {\r\n        toggleButton.textContent = 'Show Description';\r\n\r\n    }\r\n\r\n}\r\n\r\nlet myP = <p>This is pargraphe</p>;\r\n\r\nconst appDiv = document.querySelector('#app');\r\nconst root = ReactDOM.createRoot(appDiv);\r\nroot.render(myP);\r\n\r\nconsole.log('Hi there');"],"names":["toggleButton","document","querySelector","descriptionP","onclick","changeVisibility","isVisibale","toggleDescription","changeButtontext","style","display","textContent","myP","React","createElement","appDiv","root","ReactDOM","createRoot","render","console","log"],"sourceRoot":""}